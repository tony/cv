name: 'Deploy'

on:
  push:
    branches: [master]
  schedule:
    - cron: '0 0 * * 0'

  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x']

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Extract Branch Name
        run: echo "BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
      - name: Filter changed file paths to outputs
        uses: dorny/paths-filter@v2.11.1
        id: changes
        if: github.event_name != 'schedule'
        with:
          filters: |
            root: &root
              - tsconfig.json
              - package.json
              - yarn.lock
            lib: &lib
              - 'packages/lib/**'
            sharedComponents: &sharedComponents
              - 'packages/ui-range-slider/**'
              - 'packages/ui-switch/**'
              - 'packages/ui/**'
            nav: &nav
              - 'packages/nav/**'
            data: &data
              - 'packages/data/**'
            common:
              - *root
              - *lib
              - *sharedComponents
              - *nav
              - *data
            react:
              - 'packages/react/**'
              - 'packages/chart-react-*/**'
      - name: Manual trigger
        id: manual-trigger
        run: echo "::set-output name=manual-trigger::true"
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
      - name: Should publish
        if: steps.manual-trigger.outputs.manual-trigger == 'true' || steps.changes.outputs.react == 'true' || steps.changes.outputs.common == 'true'
        run: echo "PUBLISH=$(echo true)" >> $GITHUB_ENV
      - name: Set dest dir (branch)
        if: env.BRANCH != 'master'
        run: |
          echo "AWS_S3_DEST_DIR=dev/branch/${{ env.BRANCH }}" >> $GITHUB_ENV
          echo "AWS_CLOUDFRONT_INVALIDATION_PATHS=/dev/branch/${{ env.BRANCH }}/ /dev/branch/${{ env.BRANCH }}/index.html" >> $GITHUB_ENV
      - name: Set dest dir (master)
        if: env.BRANCH == 'master'
        run: |
          echo "AWS_S3_DEST_DIR=" >> $GITHUB_ENV
          echo "AWS_CLOUDFRONT_INVALIDATION_PATHS=/ /index.html" >> $GITHUB_ENV
      - name: Configure AWS Credentials
        if: env.PUBLISH == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Installing dependencies
        if: env.PUBLISH == 'true'
        run: yarn install --frozen-lockfile
      - name: pull gh repos
        if: env.PUBLISH == 'true'
        run: |
          env GITHUB_API_TOKEN=${{ secrets.CI_GITHUB_API_TOKEN }} yarn workspace @tony/cv-scripts run github
      - name: react
        if: env.PUBLISH == 'true' && (steps.manual-trigger.outputs.manual-trigger == 'true' || steps.changes.outputs.react == 'true' || steps.changes.outputs.common == 'true')
        run: |
          cd packages/react
          yarn build
      - name: push to s3 (react)
        if: env.PUBLISH == 'true' && (steps.manual-trigger.outputs.manual-trigger == 'true' || steps.changes.outputs.react == 'true' || steps.changes.outputs.common == 'true')
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_REACT_V2 }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: 'packages/react/dist/'
          DEST_DIR: ${{ env.AWS_S3_DEST_DIR }}
      - name: Invalidate (react)
        if: env.PUBLISH == 'true' && (steps.manual-trigger.outputs.manual-trigger == 'true' || steps.changes.outputs.react == 'true' || steps.changes.outputs.common == 'true')
        uses: chetan/invalidate-cloudfront-action@v2.4
        env:
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_REACT_V2 }}
          PATHS: ${{ env.AWS_CLOUDFRONT_INVALIDATION_PATHS }}
          AWS_REGION: 'us-east-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
