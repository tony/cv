name: tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Yarn cache
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
    - name: node_modules/ cache
      uses: actions/cache@v2
      id: node-modules-cache
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
    - name: project - install
      run: yarn
    - name: lib - pull gh repos
      run: |
        env GITHUB_API_TOKEN=${{ secrets.CI_GITHUB_API_TOKEN }} yarn workspace @tony/cv-scripts run github
    - name: lib - lint, test
      run: |
        yarn workspace @tony/cv-lib run lint
        yarn workspace @tony/cv-lib run test
    - name: angular - install cli, lint, and test
      run: |
        npm install -g @angular/cli
        yarn workspace @tony/cv-angular run lint
    - name: react - lint, and test
      run: |
        yarn workspace @tony/cv-react run lint
    - name: vue - lint, and test
      run: |
        yarn workspace @tony/cv-vue run lint
